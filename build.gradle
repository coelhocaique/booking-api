plugins {
	id 'application'
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootRun {
	main("com.coelhocaique.booking.BookingApiApplication")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("io.springfox:springfox-boot-starter:3.0.0")
	compileOnly("javax.servlet:javax.servlet-api:4.0.1")
	compileOnly("org.projectlombok:lombok")
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	runtimeOnly("com.h2database:h2")
	annotationProcessor("org.projectlombok:lombok")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

tasks.named('test') {
	useJUnitPlatform()
}

distTar.enabled = false
distZip.enabled = false

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = file("${buildDir}/reports/jacoco")
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/*BookingApiApplication**',
					'com/coelhocaique/booking/dto/**',
					'com/coelhocaique/booking/controller/advice/**',
					'com/coelhocaique/booking/entity/**',
					'com/coelhocaique/booking/config/**'
			])
		}))
	}
}
